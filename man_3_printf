.TH _PRINTF 12 "July 2022" "0.1" "ALX  - _printf"

.SH NAME
.B _printf\fR \- formatted output conversion

.SH SYNOPSIS
.B #include \fB"main.h"

.B int printf(const char *\fIformat\fB, ...);

.SH DESCRIPTION
The function \fB_printf()\fR writes output to \fIstdout\fR, the standard 
output. The function writes under the control of a \fIformat\fR string that 
specifies how subsequent arguments (accessed via the variable-length argument 
facilities of stdarg) are converted for output.

.B Return value
.in +2n
Upon successful return, \fB_printf()\fR returns the number of characters 
printed (excluding the null byte used to end output to strings).

If an output error is encountered, -1 is returned.
.in

.B Format of the format string
.in +2n
The format string is a constant character string composed of zero or more 
directives: ordinary characters (not \fB%\fR) which are copied unchanged to 
the output stream; and conversion specifications, each of which results in 
fetching zero or more subsequent arguments. Conversion specification is 
introduced by the character \fB%\fR and ends with a \fIconversion specifier\fR.

In between the \fB%\fR character and conversion specifier, there may be (in 
order) zero or more \fIflags\fR, an optional minimum \fIfield width\fR, an 
optional \fIprecision\fR and an optional \fIlength\fR modifier. The arguments 
must correspond with the conversion specifier, and are used in the order given.
.in

.B Flag Characters
.in +2n
The character \fB%\fR may be followed by zero or more of the following flags:

.RS
.B #
.in +2n
For \fBo\fR conversions, the first character of the output string is prefixed 
with 0 if it was not zero already. For x and X converions, 0x or 0X, 
respectively, is prepended for non-zero numbers.
.in
.RE

